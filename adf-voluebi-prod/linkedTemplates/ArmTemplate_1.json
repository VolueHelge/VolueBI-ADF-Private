{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-voluebi-prod"
		},
		"DW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DW'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DW_connectionString')]"
				},
				"connectVia": {
					"referenceName": "VolueBIVnet",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyWithLogin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetDWAutomationClientSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(\npipeline().globalParameters.KeyvaultURL,\n'AutomationClientSecret',\npipeline().globalParameters.KeyVaultAPIVersion)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Login",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetDWAutomationClientSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(\n'https://login.microsoftonline.com/'\n,pipeline().globalParameters.VolueTenantId\n,'/oauth2/v2.0/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'client_id=',\npipeline().globalParameters.AutomationClientId,\n'&grant_type=client_credentials',\n'&scope=https://graph.microsoft.com/.default',\n'&client_secret=',\nactivity('GetDWAutomationClientSecret').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@{if(\n    empty(string(pipeline().parameters.Token)),\n    concat('Bearer ',string(activity('Login').output.access_token)),\n    concat('Bearer ', pipeline().parameters.Token\n    )\n)}",
										"type": "Expression"
									},
									"ConsistencyLevel": "eventual"
								},
								"paginationRules": {
									"AbsoluteUrl": "$['@odata.nextLink']"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DynamicMicrosoftGraphREST",
								"type": "DatasetReference",
								"parameters": {
									"path": "users/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "StorageCsv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "test.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Token": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure AD"
				},
				"annotations": [
					"Graph"
				],
				"lastPublishTime": "2022-06-24T12:33:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCopyGraph')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@{concat(\n    'Bearer ',\n    pipeline().parameters.Token\n)}",
										"type": "Expression"
									},
									"ConsistencyLevel": "eventual"
								},
								"paginationRules": {
									"AbsoluteUrl": "$['@odata.nextLink']"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DynamicMicrosoftGraphREST",
								"type": "DatasetReference",
								"parameters": {
									"path": "users/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "StorageCsv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "test.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Token": {
						"type": "string",
						"defaultValue": "eyJ0eXAiOiJKV1QiLCJub25jZSI6IjJuSmxianpKSXRvNDlEX3V3dzhoa0ZuUFhlZUoyWTdudVppVVJmY3NQWU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGxWMFRPSSIsImtpZCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGxWMFRPSSJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85Y2U3NmQ0Mi01ZWNiLTRkOGYtOTM5Yi1hNDYyYWQyOGNmMzQvIiwiaWF0IjoxNjU2MDY4NDA5LCJuYmYiOjE2NTYwNjg0MDksImV4cCI6MTY1NjA3Mjc3OCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhUQUFBQUQ2eXd6Z0RMVFFqRnozRXlsQ0RoNmRPRlJwYlA0WnZNc0FnMTNGS3dWOHRlUUYyNHE1anY3NnJhZXlTWXo0c1AraGtUYzBFVkw2anBJVXJOZzFpMm1VbUZzdDY5NUJ3eGZnU08zcks4ZWlFPSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiR3JhcGggRXhwbG9yZXIiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImZhbWlseV9uYW1lIjoiU2Nocm9lZGVyIiwiZ2l2ZW5fbmFtZSI6IkhlbGdlIiwiaWR0eXAiOiJ1c2VyIiwiaXBhZGRyIjoiODQuNTIuMTk5LjEwOCIsIm5hbWUiOiJIZWxnZSBTY2hyb2VkZXIiLCJvaWQiOiJkY2NlMjU3Zi01MzBjLTRjZmItOWQ2MC0xMzliMjk5MTUyNGIiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMzk0MDU4OTc1OC05MzMxMzU3OC0zMTY5MzE0MjQ1LTc4MzYiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDFGOTdBNDZEQSIsInJoIjoiMC5BVGtBUW0zbm5NdGVqMDJUbTZSaXJTalBOQU1BQUFBQUFBQUF3QUFBQUFBQUFBQTVBRmMuIiwic2NwIjoiQ2FsZW5kYXJzLlJlYWRXcml0ZSBDaGF0LlJlYWQgQ2hhdC5SZWFkQmFzaWMgQ29udGFjdHMuUmVhZFdyaXRlIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRTZXJ2aWNlQ29uZmlnLlJlYWQuQWxsIEZpbGVzLlJlYWRXcml0ZS5BbGwgR3JvdXAuUmVhZFdyaXRlLkFsbCBJZGVudGl0eVJpc2tFdmVudC5SZWFkLkFsbCBNYWlsLlJlYWQgTWFpbC5SZWFkV3JpdGUgTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSBOb3Rlcy5SZWFkV3JpdGUuQWxsIG9wZW5pZCBQZW9wbGUuUmVhZCBQbGFjZS5SZWFkIFByZXNlbmNlLlJlYWQgUHJlc2VuY2UuUmVhZC5BbGwgUHJpbnRlclNoYXJlLlJlYWRCYXNpYy5BbGwgUHJpbnRKb2IuQ3JlYXRlIFByaW50Sm9iLlJlYWRCYXNpYyBwcm9maWxlIFJlcG9ydHMuUmVhZC5BbGwgU2l0ZXMuUmVhZFdyaXRlLkFsbCBUYXNrcy5SZWFkV3JpdGUgVXNlci5SZWFkIFVzZXIuUmVhZEJhc2ljLkFsbCBVc2VyLlJlYWRXcml0ZSBVc2VyLlJlYWRXcml0ZS5BbGwgZW1haWwiLCJzaWduaW5fc3RhdGUiOlsia21zaSJdLCJzdWIiOiI0M284OXVTbVBhTElnNEwyTVZyX0dFVjlwR0xEdVlHQVh3X1dMd3RzSUZFIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6IkVVIiwidGlkIjoiOWNlNzZkNDItNWVjYi00ZDhmLTkzOWItYTQ2MmFkMjhjZjM0IiwidW5pcXVlX25hbWUiOiJoZWxnZS5zY2hyb2VkZXJAdm9sdWUuY29tIiwidXBuIjoiaGVsZ2Uuc2Nocm9lZGVyQHZvbHVlLmNvbSIsInV0aSI6ImE0Rmdha2RyTGs2b3VvcWwweWNlQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbIjg4ZDhlM2UzLThmNTUtNGExZS05NTNhLTliOTg5OGI4ODc2YiIsImE5ZWE4OTk2LTEyMmYtNGM3NC05NTIwLThlZGNkMTkyODI2YyIsImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiS2RPWjl6NEZ6VTc5M1M5RVNZLVZCR01iTFg5TDJZeXM5Y3RDMzVWdGZhUSJ9LCJ4bXNfdGNkdCI6MTU4MzkyNTEyOX0.XcgHR_GCbde1ifKAPSbFsJisdtvJsjTKeiP24h8SuJnaLrEvwkbl2nskuLTkXNNqeQazeQmuJRI1hdLg2NV_VxIrloThYtqgDIiGGoIDAvYRVBq1Zny8I4JAGE1t5mB8_P7MeUy3QmODZG-0yhfBZqP-91fBrILxilAXhK_jfZC8U_RuOZRX9_wxyG_hPhjHtcro7J4_G8mnIjpYTDDYmGQQs-DE0XAXIAEloTTNcH1pb0EjY5TUe9xypo2ZZjqSLyVNWN29lxtpHmixpV3UN3cGWgU-XcyfTO3UQJkD-3WaVBNd9V-sg3z30CwnENuwfvz8UUapf4j_JsD1UkzMIQ"
					}
				},
				"folder": {
					"name": "Azure AD"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T12:33:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_Generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DW",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "String"
					},
					"TableName": {
						"type": "String"
					},
					"DatabaseName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PowerBIWorkspaceInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extract Power BI tenant metadata\n\nCreated by: Just Blindbæk",
				"activities": [
					{
						"name": "Save list of workspaces",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "ADF_PipelineRunID",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "ADF_PipelineTriggerTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DynamicPowerBIAdminAPI",
								"type": "DatasetReference",
								"parameters": {
									"path": "groups/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_Generic",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "stgpowerbi",
									"TableName": "ModifiedWorkspaces",
									"DatabaseName": {
										"value": "DWH",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Get batches of workspaces",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Save list of workspaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "WITH [WorkspaceRanked]\nAS\n(\n    SELECT ROW_NUMBER() OVER (PARTITION BY [ADF_PipelineRunID] ORDER BY [Id]) AS [Rank]\n    ,[Id]\n    ,[ADF_PipelineRunID]\n    FROM [stgpowerbi].[ModifiedWorkspaces]\n),\n[WorkspaceBatched]\nAS\n(\n    SELECT ROW_NUMBER() OVER (PARTITION BY([Rank] % 100), [ADF_PipelineRunID] ORDER BY [Rank] ASC) AS [Batch]\n    ,[Id]\n    ,[ADF_PipelineRunID]\n    FROM [WorkspaceRanked]\n)\nSELECT N'{\"workspaces\": [\"' + STRING_AGG([Id], '\", \"') + '\"]}' AS [BodyExpression], [Batch]\nFROM [WorkspaceBatched]\nWHERE ADF_PipelineRunID = '@{pipeline().RunId}'\nGROUP BY [Batch]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_Generic",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "stgpowerbi",
									"TableName": "ModifiedWorkspaces",
									"DatabaseName": {
										"value": "DWH",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get batches of workspaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get batches of workspaces').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute ScanResult pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_PowerBIWorkspaceInfoScanResult_ADLS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Batch": {
												"value": "@item().Batch",
												"type": "Expression"
											},
											"ADF_PipelineRunId": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"ADF_TriggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"BodyExpression": {
												"value": "@item().BodyExpression",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"WorkspaceBatches": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Power BI monitor"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-25T18:55:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_Generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerBITest_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachDay",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,pipeline().parameters.DaysToExtract)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy Activity Events",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.continuationUri"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DynamicPowerBIAdminAPI",
											"type": "DatasetReference",
											"parameters": {
												"path": "activityevents?startDateTime='@{formatDateTime(getPastTime(int(item()), 'Day'), 'yyyy-MM-dd')}T00:00:00.000Z'&endDateTime='@{formatDateTime(getPastTime(int(item()), 'Day'), 'yyyy-MM-dd')}T23:59:59.999Z'"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DWtable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DaysToExtract": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T14:36:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWtable')]"
			]
		}
	]
}